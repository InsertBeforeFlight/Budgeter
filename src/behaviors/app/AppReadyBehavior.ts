import * as constants from "../../constants";
import ConfigurationModule from "../../modules/ConfigurationModule";
import IBudgeterConfiguration from "../../models/IBudgeterConfiguration";
import WindowConfigurationMapper from "../../mappers/WindowConfigurationMapper";
import WindowWebConfigurationMapper from "../../mappers/WindowWebConfigurationMapper";
import WindowModule from "../../modules/WindowModule";

// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;

console.log(`URL: ${MAIN_WINDOW_WEBPACK_ENTRY}`);

async function getBudgeterConfiguration(): Promise<IBudgeterConfiguration> {
    try {
        return await ConfigurationModule.getConfiguration();
    } catch (e: unknown) {
        WindowModule.showErrorDialog(
                constants.FAILED_CONFIG_ERROR_TITLE,
                constants.FAILED_CONFIG_ERROR_MESSAGE
        )
    }
}

export default async function () {
    const budgeterConfiguration = await getBudgeterConfiguration();

    const windowWebConfiguration = WindowWebConfigurationMapper.fromBudgeterConfiguration(budgeterConfiguration);
    const windowConfiguration = WindowConfigurationMapper.fromBudgeterConfiguration(budgeterConfiguration, windowWebConfiguration);

    const window = await WindowModule.createWindow(windowConfiguration);
    await window.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);
    window.webContents.openDevTools();
}