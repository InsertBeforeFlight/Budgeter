import MainConsumerLoggingModule from "../../modules/logging/MainConsumerLoggingModule";
import WindowModule from "../../modules/WindowModule";
import MainIpcModule from "../../modules/ipc/MainIpcModule";
import ConfigurationModule from "../../modules/ConfigurationModule";
import IReviewTransactionsWindowRequest from "../../models/window/IReviewTransactionsWindowRequest";
import IpcSource from "../../models/IpcSource";
import IReviewTransactionsWindowResponse from "../../models/window/IReviewTransactionsWindowResponse";

// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const REVIEW_TRANSACTIONS_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

const wait = () => new Promise(r => setTimeout(r, 1000));

export default async function ReviewTransactionsWindowConsumer(logger: MainConsumerLoggingModule, { key, transactions }: IReviewTransactionsWindowRequest) {
    const config = await ConfigurationModule.getConfiguration();
    const reviewTransactionsConfiguration = config.windows.find(window => window.title === IpcSource.ReviewTransactions);
    reviewTransactionsConfiguration.webPreferences.preload = MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY;

    const window = WindowModule.createWindow(IpcSource.ReviewTransactions, reviewTransactionsConfiguration);
    logger.logInfo(`Created Window: ${window.title}`);

    // Dom needs to be ready so lisener starts.
    window.webContents.once('dom-ready', async () => {
        const response: IReviewTransactionsWindowResponse = {
            source: IpcSource.ReviewTransactions,
            key,
            success:true,
            transactions
        }

        MainIpcModule.sendSuccess(response);
    });

    await window.loadURL(REVIEW_TRANSACTIONS_WINDOW_WEBPACK_ENTRY);
    logger.logInfo(`Loaded URL: ${REVIEW_TRANSACTIONS_WINDOW_WEBPACK_ENTRY}`);

    window.webContents.openDevTools();
    logger.logInfo("Opened Window Developer Tools");

    window.show();

}